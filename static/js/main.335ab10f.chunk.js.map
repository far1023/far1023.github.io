{"version":3,"sources":["components/About.jsx","components/Tech.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["About","className","href","target","title","Tech","RouteContainer","posed","div","enter","opacity","delay","beforeChildren","exit","App","render","location","key","pathname","exact","path","component","id","to","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iQAkBeA,MAff,WACC,OACC,yBAAKC,UAAU,SACf,wCAAa,6BAAM,gDAA+B,6BAClD,qLACA,+BAAI,uBAAGA,UAAU,8BAAb,QAAJ,kBAA0E,6BAC1E,yBAAKA,UAAU,UACf,uBAAGC,KAAK,6BAA6BC,OAAO,SAASC,MAAM,WAAU,uBAAGH,UAAU,yBADlF,OAEA,uBAAGC,KAAK,+BAA+BC,OAAO,SAASC,MAAM,aAAY,uBAAGH,UAAU,0BAFtF,OAGA,uBAAGC,KAAK,oCAAoCC,OAAO,SAASC,MAAM,kBAAiB,uBAAGH,UAAU,8BAHhG,OAIA,uBAAGC,KAAK,8BAA8BC,OAAO,SAASC,MAAM,cAAa,uBAAGH,UAAU,6BCFzEI,MARf,WACC,OACC,6BACA,yBAAKJ,UAAU,QAAO,uBAAGA,UAAU,2BAA2B,uBAAGA,UAAU,0BAA0B,uBAAGA,UAAU,oCCG9GK,EAAiBC,IAAMC,IAAI,CAChCC,MAAO,CAAEC,QAAS,EAAGC,MAAO,IAAKC,gBAAgB,GACjDC,KAAM,CAAEH,QAAS,KA0BHI,MAvBf,WACC,OACC,kBAAC,IAAD,KACC,6BACC,kBAAC,IAAD,CAAOC,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACd,kBAAC,IAAD,KACC,kBAACV,EAAD,CAAgBW,IAAKD,EAASE,UAC7B,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrB,EAAOiB,IAAI,KAC5C,kBAAC,IAAD,CAAOG,KAAK,SAASC,UAAWrB,EAAOiB,IAAI,UAC3C,kBAAC,IAAD,CAAOG,KAAK,QAAQC,UAAWhB,EAAMY,IAAI,eAK7C,yBAAKhB,UAAU,OAAOqB,GAAG,SACxB,kBAAC,IAAD,CAAMC,GAAG,SAAStB,UAAU,SAA5B,SADD,WACoD,kBAAC,IAAD,CAAMsB,GAAG,QAAQtB,UAAU,SAA3B,YClBpCuB,QACW,cAA7BC,OAAOT,SAASU,UAEe,UAA7BD,OAAOT,SAASU,UAEhBD,OAAOT,SAASU,SAASC,MACvB,2DCZNC,IAASb,OAAO,kBAAC,EAAD,MAASc,SAASC,eAAe,QD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.335ab10f.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../assets/style.css';\r\n\r\nfunction About() {\r\n\treturn (\r\n\t\t<div className=\"about\">\r\n\t\t<h2>Fuad Agil<br /><span>Web Developer</span></h2><br />\r\n\t\t<p>Years of experience in web development especially PHP and JS. Highly reusable and clean written code. Willing for remote or onsite(Pekanbaru) project.</p>\r\n\t\t<p> <i className=\"fa fa-fw fa-map-marker-alt\">&nbsp;</i> Pekanbaru, ID</p><br />\r\n\t\t<div className=\"social\">\r\n\t\t<a href=\"https://github.com/far1023\" target=\"_blank\" title=\"Fork me\"><i className=\"fab fa-fw fa-github\" /></a>&nbsp;\r\n\t\t<a href=\"https://twitter.com/fuadagil\" target=\"_blank\" title=\"Follow me\"><i className=\"fab fa-fw fa-twitter\" /></a>&nbsp;\r\n\t\t<a href=\"https://linkedin.com/in/fuadagilr\" target=\"_blank\" title=\"Add Connection\"><i className=\"fab fa-fw fa-linkedin-in\" /></a>&nbsp;\r\n\t\t<a href=\"mailto: fuadagilr@gmail.com\" target=\"_blank\" title=\"Send email\"><i className=\"fa fa-fw fa-envelope\" /></a>\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default About;\r\n","import React from 'react';\r\nimport '../assets/style.css';\r\n\r\nfunction Tech() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t<div className=\"tech\"><i className=\"fab fa-php fa-4x fa-fw\" /><i className=\"fab fa-js fa-4x fa-fw\" /><i className=\"fab fa-bootstrap fa-4x fa-fw\" /></div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Tech;\r\n","import React from 'react';\r\nimport '../assets/style.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport posed, { PoseGroup } from 'react-pose';\r\n\r\n\r\nimport About from \"./About\";\r\nimport Tech from \"./Tech\";\r\n\r\nconst RouteContainer = posed.div({\r\n\tenter: { opacity: 1, delay: 300, beforeChildren: false },\r\n\texit: { opacity: 0 }\r\n});\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<div>\r\n\t\t\t\t<Route render={({ location }) => (\r\n\t\t\t\t\t<PoseGroup>\r\n\t\t\t\t\t\t<RouteContainer key={location.pathname}>\t\r\n\t\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t\t<Route exact path=\"/\" component={About} key=\"\" />\r\n\t\t\t\t\t\t\t\t<Route path=\"/about\" component={About} key=\"about\" />\r\n\t\t\t\t\t\t\t\t<Route path=\"/tech\" component={Tech} key=\"tech\" />\r\n\t\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t</RouteContainer>\r\n\t\t\t\t\t</PoseGroup>\r\n\t\t\t\t)}/>\r\n\t\t\t\t<div className=\"link\" id=\"route\">\r\n\t\t\t\t\t<Link to=\"/about\" className=\"route\">About</Link> â€¢ <Link to=\"/tech\" className=\"route\">Tech</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('app'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}